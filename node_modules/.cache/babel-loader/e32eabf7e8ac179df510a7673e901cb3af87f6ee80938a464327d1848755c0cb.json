{"ast":null,"code":"var _jsxFileName = \"/Users/jo-eun-yeong/Desktop/simplediary/src/OptimizeTest.js\",\n  _s = $RefreshSig$();\nimport React, { useEffect, useState } from \"react\";\n\n// const TextView = React.memo(({ text }) => {\n//   useEffect(() => {\n//     console.log(`Update :: Text : ${text}`);\n//   });\n//   return <div>{text}</div>;\n// });\n\n// const CountView = React.memo(({ count }) => {\n//   useEffect(() => {\n//     console.log(`Update :: Count : ${count}`);\n//   });\n//   return <div>{count}</div>;\n// });\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst OptimizeTest = () => {\n  _s();\n  const [count, setCount] = useState(1);\n  const [text, setText] = useState(\"\");\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    style: {\n      padding: 50\n    }\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 21,\n    columnNumber: 5\n  }, this);\n};\n_s(OptimizeTest, \"dNtZfp4oyj4N/7iJZUhPAuJHtEE=\");\n_c = OptimizeTest;\nexport default OptimizeTest;\nvar _c;\n$RefreshReg$(_c, \"OptimizeTest\");","map":{"version":3,"names":["React","useEffect","useState","OptimizeTest","count","setCount","text","setText","padding"],"sources":["/Users/jo-eun-yeong/Desktop/simplediary/src/OptimizeTest.js"],"sourcesContent":["import React, { useEffect, useState } from \"react\";\n\n// const TextView = React.memo(({ text }) => {\n//   useEffect(() => {\n//     console.log(`Update :: Text : ${text}`);\n//   });\n//   return <div>{text}</div>;\n// });\n\n// const CountView = React.memo(({ count }) => {\n//   useEffect(() => {\n//     console.log(`Update :: Count : ${count}`);\n//   });\n//   return <div>{count}</div>;\n// });\nconst OptimizeTest = () => {\n  const [count, setCount] = useState(1);\n  const [text, setText] = useState(\"\");\n\n  return (\n    <div style={{ padding: 50 }}>\n      {/* <div>\n        <h2>count</h2>\n        <CountView count={count} />\n        <button onClick={() => setCount(count + 1)}>+</button>\n      </div>\n      <div>\n        <h2>text</h2>\n        <TextView text={text} />\n        <input value={text} onChange={(e) => setText(e.target.value)} />\n      </div> */}\n    </div>\n  );\n};\n\nexport default OptimizeTest;\n"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,SAAS,EAAEC,QAAQ,QAAQ,OAAO;;AAElD;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AAAA;AACA,MAAMC,YAAY,GAAG,MAAM;EAAA;EACzB,MAAM,CAACC,KAAK,EAAEC,QAAQ,CAAC,GAAGH,QAAQ,CAAC,CAAC,CAAC;EACrC,MAAM,CAACI,IAAI,EAAEC,OAAO,CAAC,GAAGL,QAAQ,CAAC,EAAE,CAAC;EAEpC,oBACE;IAAK,KAAK,EAAE;MAAEM,OAAO,EAAE;IAAG;EAAE;IAAA;IAAA;IAAA;EAAA,QAWtB;AAEV,CAAC;AAAC,GAlBIL,YAAY;AAAA,KAAZA,YAAY;AAoBlB,eAAeA,YAAY;AAAC;AAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}